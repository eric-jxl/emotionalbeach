version: "1.0"
services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    container_name: emotionalBeach
    restart: unless-stopped
    ports:
      - 8080:8080
    networks:
      - open_server
    volumes:
      - ./config/.env:/app/config/.env
    entrypoint: [ "./entrypoint.sh" ]
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      GOPROXY: "https://goproxy.cn,direct"
      GOSUMDB: "off"
  db:
    image: postgres:13
    restart: unless-stopped
    user: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: hi_chat
    volumes:
      - db-data:/var/lib/postgresql/data
    expose:
      - 5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - open_server

volumes:
  db-data:

networks:
  open_server:
    driver: bridge

